-- REPORT.A
--
--                             Grant of Unlimited Rights
--
--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,
--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained
--     unlimited rights in the software and documentation contained herein.
--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making
--     this public release, the Government intends to confer upon all
--     recipients unlimited rights  Equal to those held by the Government.
--     These rights include rights to use, duplicate, release or disclose the
--     released technical data and computer software in whole or in part, in
--     any manner and for any purpose whatsoever, and to have or permit others
--     to do so.
--
--                                    DISCLAIMER
--
--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR
--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED
--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE
--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE
--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A
--     PARTICULAR PURPOSE OF SAID MATERIAL.
--*
--
-- PURPOSE:
--      This Report package provides the mechanism for reporting the
--      Pass/Fail/Not-Applicable results of executable (Classes A, C,
--      D, E, and L) tests.

--      It also provides the mechanism for guaranteeing that certain
--      values become dynamic (not known at compile-time).

--      This version can write an event trace file in the format required
--      by the ACATS grading tools. Writing the event trace file requires
--      that text files can be created and appended to. If that is not true
--      for your target, set Generate_Event_Trace_File to False.

-- CHANGE HISTORY:
--      SJW  2/14/24  Made function Legal_File_Name 'separate'. This is to
--                    allow each test to run in its own directory in
--                    Grading, which will mean that external file names
--                    that need to be preserved between tests have to
--                    be one level up.
--

separate (Report)
function Legal_File_Name (X : File_Num := 1;
                          Nam : String := "")
                         return String is
   Suffix : String (2..6);
begin
   if Nam = "" then
      Suffix := Test_Name(3..7);
   else
      Suffix := Nam(3..7);
   end if;

   --  By inspection of a grading run where each test is run in its
   --  own directory, it has been determined that the only tests that
   --  require the file whose name is generated here to be preserved
   --  between runs are CE2108F (uses the file generated by CE2108E)
   --  and CE2108H (uses the file generated by CE2108G).
   if Suffix = "2108E" or Suffix = "2108G"then
      case X is
         when 1 => return ("../" & 'X' & Suffix);
         when 2 => return ("../" & 'Y' & Suffix);
         when 3 => return ("../" & 'Z' & Suffix);
         when 4 => return ("../" & 'V' & Suffix);
         when 5 => return ("../" & 'W' & Suffix);
      end case;
   else
      case X is
         when 1 => return ('X' & Suffix);
         when 2 => return ('Y' & Suffix);
         when 3 => return ('Z' & Suffix);
         when 4 => return ('V' & Suffix);
         when 5 => return ('W' & Suffix);
      end case;
   end if;
end Legal_File_Name;
